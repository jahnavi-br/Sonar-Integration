name: .NET CI with SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.x'  # Specify your required .NET version

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Run tests
      run: dotnet test --configuration Release --no-build --logger:trx

    - name: SonarQube Scan
      run: |
        dotnet tool install --global dotnet-sonarscanner
        export PATH="$PATH:/home/runner/.dotnet/tools"
        dotnet sonarscanner begin /k:"${{ env.SONAR_PROJECT_KEY }}" /o:"${{ env.SONAR_ORGANIZATION }}" /d:sonar.host.url="${{ env.SONAR_HOST_URL }}" /d:sonar.login="${{ env.SONAR_TOKEN }}"
        dotnet build --configuration Release
        dotnet sonarscanner end /d:sonar.login="${{ env.SONAR_TOKEN }}"

    - name: Publish Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: TestResults
        path: |
          **/*.trx
